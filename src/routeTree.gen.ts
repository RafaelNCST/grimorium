/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ItemIdIndexRouteImport } from './routes/item/$id/index'
import { Route as DashboardDashboardIdIndexRouteImport } from './routes/dashboard/$dashboardId/index'
import { Route as ItemIdTimelineRouteImport } from './routes/item/$id/timeline'
import { Route as DashboardDashboardIdWorldWorldIdRouteImport } from './routes/dashboard/$dashboardId/world/$worldId'
import { Route as DashboardDashboardIdRaceRaceIdRouteImport } from './routes/dashboard/$dashboardId/race/$raceId'
import { Route as DashboardDashboardIdPlotPlotIdRouteImport } from './routes/dashboard/$dashboardId/plot/$plotId'
import { Route as DashboardDashboardIdOrganizationOrgIdRouteImport } from './routes/dashboard/$dashboardId/organization/$orgId'
import { Route as DashboardDashboardIdNotesNotesRouteImport } from './routes/dashboard/$dashboardId/notes/notes'
import { Route as DashboardDashboardIdItemItemIdRouteImport } from './routes/dashboard/$dashboardId/item/$itemId'
import { Route as DashboardDashboardIdCharacterCharacterIdRouteImport } from './routes/dashboard/$dashboardId/character/$characterId'
import { Route as DashboardDashboardIdChapterChaptersRouteImport } from './routes/dashboard/$dashboardId/chapter/chapters'
import { Route as DashboardDashboardIdBeastIdRouteImport } from './routes/dashboard/$dashboardId/beast/$id'
import { Route as DashboardDashboardIdPlotPlotTimelinePlotTimelineRouteImport } from './routes/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
import { Route as DashboardDashboardIdNotesFileNotesFileNotesIdRouteImport } from './routes/dashboard/$dashboardId/notes/file-notes/$file-notesId'
import { Route as DashboardDashboardIdNotesEditorNotesEditorNotesIdRouteImport } from './routes/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
import { Route as DashboardDashboardIdCharacterCharacterIdFamilyTreeRouteImport } from './routes/dashboard/$dashboardId/character/$characterId/family-tree'
import { Route as DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRouteImport } from './routes/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'

const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemIdIndexRoute = ItemIdIndexRouteImport.update({
  id: '/item/$id/',
  path: '/item/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardIdIndexRoute =
  DashboardDashboardIdIndexRouteImport.update({
    id: '/dashboard/$dashboardId/',
    path: '/dashboard/$dashboardId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ItemIdTimelineRoute = ItemIdTimelineRouteImport.update({
  id: '/item/$id/timeline',
  path: '/item/$id/timeline',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardIdWorldWorldIdRoute =
  DashboardDashboardIdWorldWorldIdRouteImport.update({
    id: '/dashboard/$dashboardId/world/$worldId',
    path: '/dashboard/$dashboardId/world/$worldId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdRaceRaceIdRoute =
  DashboardDashboardIdRaceRaceIdRouteImport.update({
    id: '/dashboard/$dashboardId/race/$raceId',
    path: '/dashboard/$dashboardId/race/$raceId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdPlotPlotIdRoute =
  DashboardDashboardIdPlotPlotIdRouteImport.update({
    id: '/dashboard/$dashboardId/plot/$plotId',
    path: '/dashboard/$dashboardId/plot/$plotId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdOrganizationOrgIdRoute =
  DashboardDashboardIdOrganizationOrgIdRouteImport.update({
    id: '/dashboard/$dashboardId/organization/$orgId',
    path: '/dashboard/$dashboardId/organization/$orgId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesNotesRoute =
  DashboardDashboardIdNotesNotesRouteImport.update({
    id: '/dashboard/$dashboardId/notes/notes',
    path: '/dashboard/$dashboardId/notes/notes',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdItemItemIdRoute =
  DashboardDashboardIdItemItemIdRouteImport.update({
    id: '/dashboard/$dashboardId/item/$itemId',
    path: '/dashboard/$dashboardId/item/$itemId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdCharacterCharacterIdRoute =
  DashboardDashboardIdCharacterCharacterIdRouteImport.update({
    id: '/dashboard/$dashboardId/character/$characterId',
    path: '/dashboard/$dashboardId/character/$characterId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdChapterChaptersRoute =
  DashboardDashboardIdChapterChaptersRouteImport.update({
    id: '/dashboard/$dashboardId/chapter/chapters',
    path: '/dashboard/$dashboardId/chapter/chapters',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdBeastIdRoute =
  DashboardDashboardIdBeastIdRouteImport.update({
    id: '/dashboard/$dashboardId/beast/$id',
    path: '/dashboard/$dashboardId/beast/$id',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute =
  DashboardDashboardIdPlotPlotTimelinePlotTimelineRouteImport.update({
    id: '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline',
    path: '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesFileNotesFileNotesIdRoute =
  DashboardDashboardIdNotesFileNotesFileNotesIdRouteImport.update({
    id: '/dashboard/$dashboardId/notes/file-notes/$file-notesId',
    path: '/dashboard/$dashboardId/notes/file-notes/$file-notesId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute =
  DashboardDashboardIdNotesEditorNotesEditorNotesIdRouteImport.update({
    id: '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId',
    path: '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute =
  DashboardDashboardIdCharacterCharacterIdFamilyTreeRouteImport.update({
    id: '/family-tree',
    path: '/family-tree',
    getParentRoute: () => DashboardDashboardIdCharacterCharacterIdRoute,
  } as any)
const DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute =
  DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRouteImport.update({
    id: '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId',
    path: '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/item/$id/timeline': typeof ItemIdTimelineRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdIndexRoute
  '/item/$id': typeof ItemIdIndexRoute
  '/dashboard/$dashboardId/beast/$id': typeof DashboardDashboardIdBeastIdRoute
  '/dashboard/$dashboardId/chapter/chapters': typeof DashboardDashboardIdChapterChaptersRoute
  '/dashboard/$dashboardId/character/$characterId': typeof DashboardDashboardIdCharacterCharacterIdRouteWithChildren
  '/dashboard/$dashboardId/item/$itemId': typeof DashboardDashboardIdItemItemIdRoute
  '/dashboard/$dashboardId/notes/notes': typeof DashboardDashboardIdNotesNotesRoute
  '/dashboard/$dashboardId/organization/$orgId': typeof DashboardDashboardIdOrganizationOrgIdRoute
  '/dashboard/$dashboardId/plot/$plotId': typeof DashboardDashboardIdPlotPlotIdRoute
  '/dashboard/$dashboardId/race/$raceId': typeof DashboardDashboardIdRaceRaceIdRoute
  '/dashboard/$dashboardId/world/$worldId': typeof DashboardDashboardIdWorldWorldIdRoute
  '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId': typeof DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/character/$characterId/family-tree': typeof DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId': typeof DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/file-notes/$file-notesId': typeof DashboardDashboardIdNotesFileNotesFileNotesIdRoute
  '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline': typeof DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/item/$id/timeline': typeof ItemIdTimelineRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdIndexRoute
  '/item/$id': typeof ItemIdIndexRoute
  '/dashboard/$dashboardId/beast/$id': typeof DashboardDashboardIdBeastIdRoute
  '/dashboard/$dashboardId/chapter/chapters': typeof DashboardDashboardIdChapterChaptersRoute
  '/dashboard/$dashboardId/character/$characterId': typeof DashboardDashboardIdCharacterCharacterIdRouteWithChildren
  '/dashboard/$dashboardId/item/$itemId': typeof DashboardDashboardIdItemItemIdRoute
  '/dashboard/$dashboardId/notes/notes': typeof DashboardDashboardIdNotesNotesRoute
  '/dashboard/$dashboardId/organization/$orgId': typeof DashboardDashboardIdOrganizationOrgIdRoute
  '/dashboard/$dashboardId/plot/$plotId': typeof DashboardDashboardIdPlotPlotIdRoute
  '/dashboard/$dashboardId/race/$raceId': typeof DashboardDashboardIdRaceRaceIdRoute
  '/dashboard/$dashboardId/world/$worldId': typeof DashboardDashboardIdWorldWorldIdRoute
  '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId': typeof DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/character/$characterId/family-tree': typeof DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId': typeof DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/file-notes/$file-notesId': typeof DashboardDashboardIdNotesFileNotesFileNotesIdRoute
  '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline': typeof DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/item/$id/timeline': typeof ItemIdTimelineRoute
  '/dashboard/$dashboardId/': typeof DashboardDashboardIdIndexRoute
  '/item/$id/': typeof ItemIdIndexRoute
  '/dashboard/$dashboardId/beast/$id': typeof DashboardDashboardIdBeastIdRoute
  '/dashboard/$dashboardId/chapter/chapters': typeof DashboardDashboardIdChapterChaptersRoute
  '/dashboard/$dashboardId/character/$characterId': typeof DashboardDashboardIdCharacterCharacterIdRouteWithChildren
  '/dashboard/$dashboardId/item/$itemId': typeof DashboardDashboardIdItemItemIdRoute
  '/dashboard/$dashboardId/notes/notes': typeof DashboardDashboardIdNotesNotesRoute
  '/dashboard/$dashboardId/organization/$orgId': typeof DashboardDashboardIdOrganizationOrgIdRoute
  '/dashboard/$dashboardId/plot/$plotId': typeof DashboardDashboardIdPlotPlotIdRoute
  '/dashboard/$dashboardId/race/$raceId': typeof DashboardDashboardIdRaceRaceIdRoute
  '/dashboard/$dashboardId/world/$worldId': typeof DashboardDashboardIdWorldWorldIdRoute
  '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId': typeof DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/character/$characterId/family-tree': typeof DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId': typeof DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/file-notes/$file-notesId': typeof DashboardDashboardIdNotesFileNotesFileNotesIdRoute
  '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline': typeof DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/item/$id/timeline'
    | '/dashboard/$dashboardId'
    | '/item/$id'
    | '/dashboard/$dashboardId/beast/$id'
    | '/dashboard/$dashboardId/chapter/chapters'
    | '/dashboard/$dashboardId/character/$characterId'
    | '/dashboard/$dashboardId/item/$itemId'
    | '/dashboard/$dashboardId/notes/notes'
    | '/dashboard/$dashboardId/organization/$orgId'
    | '/dashboard/$dashboardId/plot/$plotId'
    | '/dashboard/$dashboardId/race/$raceId'
    | '/dashboard/$dashboardId/world/$worldId'
    | '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
    | '/dashboard/$dashboardId/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
    | '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
    | '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/item/$id/timeline'
    | '/dashboard/$dashboardId'
    | '/item/$id'
    | '/dashboard/$dashboardId/beast/$id'
    | '/dashboard/$dashboardId/chapter/chapters'
    | '/dashboard/$dashboardId/character/$characterId'
    | '/dashboard/$dashboardId/item/$itemId'
    | '/dashboard/$dashboardId/notes/notes'
    | '/dashboard/$dashboardId/organization/$orgId'
    | '/dashboard/$dashboardId/plot/$plotId'
    | '/dashboard/$dashboardId/race/$raceId'
    | '/dashboard/$dashboardId/world/$worldId'
    | '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
    | '/dashboard/$dashboardId/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
    | '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
    | '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/item/$id/timeline'
    | '/dashboard/$dashboardId/'
    | '/item/$id/'
    | '/dashboard/$dashboardId/beast/$id'
    | '/dashboard/$dashboardId/chapter/chapters'
    | '/dashboard/$dashboardId/character/$characterId'
    | '/dashboard/$dashboardId/item/$itemId'
    | '/dashboard/$dashboardId/notes/notes'
    | '/dashboard/$dashboardId/organization/$orgId'
    | '/dashboard/$dashboardId/plot/$plotId'
    | '/dashboard/$dashboardId/race/$raceId'
    | '/dashboard/$dashboardId/world/$worldId'
    | '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
    | '/dashboard/$dashboardId/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
    | '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
    | '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  ItemIdTimelineRoute: typeof ItemIdTimelineRoute
  DashboardDashboardIdIndexRoute: typeof DashboardDashboardIdIndexRoute
  ItemIdIndexRoute: typeof ItemIdIndexRoute
  DashboardDashboardIdBeastIdRoute: typeof DashboardDashboardIdBeastIdRoute
  DashboardDashboardIdChapterChaptersRoute: typeof DashboardDashboardIdChapterChaptersRoute
  DashboardDashboardIdCharacterCharacterIdRoute: typeof DashboardDashboardIdCharacterCharacterIdRouteWithChildren
  DashboardDashboardIdItemItemIdRoute: typeof DashboardDashboardIdItemItemIdRoute
  DashboardDashboardIdNotesNotesRoute: typeof DashboardDashboardIdNotesNotesRoute
  DashboardDashboardIdOrganizationOrgIdRoute: typeof DashboardDashboardIdOrganizationOrgIdRoute
  DashboardDashboardIdPlotPlotIdRoute: typeof DashboardDashboardIdPlotPlotIdRoute
  DashboardDashboardIdRaceRaceIdRoute: typeof DashboardDashboardIdRaceRaceIdRoute
  DashboardDashboardIdWorldWorldIdRoute: typeof DashboardDashboardIdWorldWorldIdRoute
  DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute: typeof DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute
  DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute: typeof DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute
  DashboardDashboardIdNotesFileNotesFileNotesIdRoute: typeof DashboardDashboardIdNotesFileNotesFileNotesIdRoute
  DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute: typeof DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/item/$id/': {
      id: '/item/$id/'
      path: '/item/$id'
      fullPath: '/item/$id'
      preLoaderRoute: typeof ItemIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/': {
      id: '/dashboard/$dashboardId/'
      path: '/dashboard/$dashboardId'
      fullPath: '/dashboard/$dashboardId'
      preLoaderRoute: typeof DashboardDashboardIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/item/$id/timeline': {
      id: '/item/$id/timeline'
      path: '/item/$id/timeline'
      fullPath: '/item/$id/timeline'
      preLoaderRoute: typeof ItemIdTimelineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/world/$worldId': {
      id: '/dashboard/$dashboardId/world/$worldId'
      path: '/dashboard/$dashboardId/world/$worldId'
      fullPath: '/dashboard/$dashboardId/world/$worldId'
      preLoaderRoute: typeof DashboardDashboardIdWorldWorldIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/race/$raceId': {
      id: '/dashboard/$dashboardId/race/$raceId'
      path: '/dashboard/$dashboardId/race/$raceId'
      fullPath: '/dashboard/$dashboardId/race/$raceId'
      preLoaderRoute: typeof DashboardDashboardIdRaceRaceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/plot/$plotId': {
      id: '/dashboard/$dashboardId/plot/$plotId'
      path: '/dashboard/$dashboardId/plot/$plotId'
      fullPath: '/dashboard/$dashboardId/plot/$plotId'
      preLoaderRoute: typeof DashboardDashboardIdPlotPlotIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/organization/$orgId': {
      id: '/dashboard/$dashboardId/organization/$orgId'
      path: '/dashboard/$dashboardId/organization/$orgId'
      fullPath: '/dashboard/$dashboardId/organization/$orgId'
      preLoaderRoute: typeof DashboardDashboardIdOrganizationOrgIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/notes': {
      id: '/dashboard/$dashboardId/notes/notes'
      path: '/dashboard/$dashboardId/notes/notes'
      fullPath: '/dashboard/$dashboardId/notes/notes'
      preLoaderRoute: typeof DashboardDashboardIdNotesNotesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/item/$itemId': {
      id: '/dashboard/$dashboardId/item/$itemId'
      path: '/dashboard/$dashboardId/item/$itemId'
      fullPath: '/dashboard/$dashboardId/item/$itemId'
      preLoaderRoute: typeof DashboardDashboardIdItemItemIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/character/$characterId': {
      id: '/dashboard/$dashboardId/character/$characterId'
      path: '/dashboard/$dashboardId/character/$characterId'
      fullPath: '/dashboard/$dashboardId/character/$characterId'
      preLoaderRoute: typeof DashboardDashboardIdCharacterCharacterIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/chapter/chapters': {
      id: '/dashboard/$dashboardId/chapter/chapters'
      path: '/dashboard/$dashboardId/chapter/chapters'
      fullPath: '/dashboard/$dashboardId/chapter/chapters'
      preLoaderRoute: typeof DashboardDashboardIdChapterChaptersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/beast/$id': {
      id: '/dashboard/$dashboardId/beast/$id'
      path: '/dashboard/$dashboardId/beast/$id'
      fullPath: '/dashboard/$dashboardId/beast/$id'
      preLoaderRoute: typeof DashboardDashboardIdBeastIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline': {
      id: '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
      path: '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
      fullPath: '/dashboard/$dashboardId/plot/plot-timeline/plot-timeline'
      preLoaderRoute: typeof DashboardDashboardIdPlotPlotTimelinePlotTimelineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/file-notes/$file-notesId': {
      id: '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
      path: '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
      fullPath: '/dashboard/$dashboardId/notes/file-notes/$file-notesId'
      preLoaderRoute: typeof DashboardDashboardIdNotesFileNotesFileNotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId': {
      id: '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
      path: '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
      fullPath: '/dashboard/$dashboardId/notes/editor-notes/$editor-notesId'
      preLoaderRoute: typeof DashboardDashboardIdNotesEditorNotesEditorNotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/character/$characterId/family-tree': {
      id: '/dashboard/$dashboardId/character/$characterId/family-tree'
      path: '/family-tree'
      fullPath: '/dashboard/$dashboardId/character/$characterId/family-tree'
      preLoaderRoute: typeof DashboardDashboardIdCharacterCharacterIdFamilyTreeRouteImport
      parentRoute: typeof DashboardDashboardIdCharacterCharacterIdRoute
    }
    '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId': {
      id: '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
      path: '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
      fullPath: '/dashboard/$dashboardId/chapter/editor-chapters/$editor-chaptersId'
      preLoaderRoute: typeof DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardDashboardIdCharacterCharacterIdRouteChildren {
  DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute: typeof DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute
}

const DashboardDashboardIdCharacterCharacterIdRouteChildren: DashboardDashboardIdCharacterCharacterIdRouteChildren =
  {
    DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute:
      DashboardDashboardIdCharacterCharacterIdFamilyTreeRoute,
  }

const DashboardDashboardIdCharacterCharacterIdRouteWithChildren =
  DashboardDashboardIdCharacterCharacterIdRoute._addFileChildren(
    DashboardDashboardIdCharacterCharacterIdRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  ItemIdTimelineRoute: ItemIdTimelineRoute,
  DashboardDashboardIdIndexRoute: DashboardDashboardIdIndexRoute,
  ItemIdIndexRoute: ItemIdIndexRoute,
  DashboardDashboardIdBeastIdRoute: DashboardDashboardIdBeastIdRoute,
  DashboardDashboardIdChapterChaptersRoute:
    DashboardDashboardIdChapterChaptersRoute,
  DashboardDashboardIdCharacterCharacterIdRoute:
    DashboardDashboardIdCharacterCharacterIdRouteWithChildren,
  DashboardDashboardIdItemItemIdRoute: DashboardDashboardIdItemItemIdRoute,
  DashboardDashboardIdNotesNotesRoute: DashboardDashboardIdNotesNotesRoute,
  DashboardDashboardIdOrganizationOrgIdRoute:
    DashboardDashboardIdOrganizationOrgIdRoute,
  DashboardDashboardIdPlotPlotIdRoute: DashboardDashboardIdPlotPlotIdRoute,
  DashboardDashboardIdRaceRaceIdRoute: DashboardDashboardIdRaceRaceIdRoute,
  DashboardDashboardIdWorldWorldIdRoute: DashboardDashboardIdWorldWorldIdRoute,
  DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute:
    DashboardDashboardIdChapterEditorChaptersEditorChaptersIdRoute,
  DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute:
    DashboardDashboardIdNotesEditorNotesEditorNotesIdRoute,
  DashboardDashboardIdNotesFileNotesFileNotesIdRoute:
    DashboardDashboardIdNotesFileNotesFileNotesIdRoute,
  DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute:
    DashboardDashboardIdPlotPlotTimelinePlotTimelineRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
