/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardDashboardIdIndexRouteImport } from './routes/dashboard/$dashboardId/index'
import { Route as DashboardDashboardIdNotesIndexRouteImport } from './routes/dashboard/$dashboardId/notes/index'
import { Route as DashboardDashboardIdChaptersIndexRouteImport } from './routes/dashboard/$dashboardId/chapters/index'
import { Route as DashboardDashboardIdNotesFileNotesIdRouteImport } from './routes/dashboard/$dashboardId/notes/$fileNotesId'
import { Route as DashboardDashboardIdNotesEditorNotesIdRouteImport } from './routes/dashboard/$dashboardId/notes/$editorNotesId'
import { Route as DashboardDashboardIdChaptersEditorChaptersIdRouteImport } from './routes/dashboard/$dashboardId/chapters/$editor-chapters-id'
import { Route as DashboardDashboardIdTabsWorldWorldIdRouteImport } from './routes/dashboard/$dashboardId/tabs/world/$worldId'
import { Route as DashboardDashboardIdTabsRaceRaceIdRouteImport } from './routes/dashboard/$dashboardId/tabs/race/$raceId'
import { Route as DashboardDashboardIdTabsPlotPlotTimelineRouteImport } from './routes/dashboard/$dashboardId/tabs/plot/plot-timeline'
import { Route as DashboardDashboardIdTabsPlotPlotIdRouteImport } from './routes/dashboard/$dashboardId/tabs/plot/$plotId'
import { Route as DashboardDashboardIdTabsOrganizationOrgIdRouteImport } from './routes/dashboard/$dashboardId/tabs/organization/$orgId'
import { Route as DashboardDashboardIdTabsFactionFactionIdRouteImport } from './routes/dashboard/$dashboardId/tabs/faction/$factionId'
import { Route as DashboardDashboardIdTabsItemItemIdIndexRouteImport } from './routes/dashboard/$dashboardId/tabs/item/$itemId/index'
import { Route as DashboardDashboardIdTabsCharacterCharacterIdIndexRouteImport } from './routes/dashboard/$dashboardId/tabs/character/$characterId/index'
import { Route as DashboardDashboardIdTabsItemItemIdTimelineRouteImport } from './routes/dashboard/$dashboardId/tabs/item/$itemId/timeline'
import { Route as DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRouteImport } from './routes/dashboard/$dashboardId/tabs/character/$characterId/family-tree'

const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardIdIndexRoute =
  DashboardDashboardIdIndexRouteImport.update({
    id: '/dashboard/$dashboardId/',
    path: '/dashboard/$dashboardId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesIndexRoute =
  DashboardDashboardIdNotesIndexRouteImport.update({
    id: '/dashboard/$dashboardId/notes/',
    path: '/dashboard/$dashboardId/notes/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdChaptersIndexRoute =
  DashboardDashboardIdChaptersIndexRouteImport.update({
    id: '/dashboard/$dashboardId/chapters/',
    path: '/dashboard/$dashboardId/chapters/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesFileNotesIdRoute =
  DashboardDashboardIdNotesFileNotesIdRouteImport.update({
    id: '/dashboard/$dashboardId/notes/$fileNotesId',
    path: '/dashboard/$dashboardId/notes/$fileNotesId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdNotesEditorNotesIdRoute =
  DashboardDashboardIdNotesEditorNotesIdRouteImport.update({
    id: '/dashboard/$dashboardId/notes/$editorNotesId',
    path: '/dashboard/$dashboardId/notes/$editorNotesId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdChaptersEditorChaptersIdRoute =
  DashboardDashboardIdChaptersEditorChaptersIdRouteImport.update({
    id: '/dashboard/$dashboardId/chapters/$editor-chapters-id',
    path: '/dashboard/$dashboardId/chapters/$editor-chapters-id',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsWorldWorldIdRoute =
  DashboardDashboardIdTabsWorldWorldIdRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/world/$worldId',
    path: '/dashboard/$dashboardId/tabs/world/$worldId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsRaceRaceIdRoute =
  DashboardDashboardIdTabsRaceRaceIdRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/race/$raceId',
    path: '/dashboard/$dashboardId/tabs/race/$raceId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsPlotPlotTimelineRoute =
  DashboardDashboardIdTabsPlotPlotTimelineRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/plot/plot-timeline',
    path: '/dashboard/$dashboardId/tabs/plot/plot-timeline',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsPlotPlotIdRoute =
  DashboardDashboardIdTabsPlotPlotIdRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/plot/$plotId',
    path: '/dashboard/$dashboardId/tabs/plot/$plotId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsOrganizationOrgIdRoute =
  DashboardDashboardIdTabsOrganizationOrgIdRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/organization/$orgId',
    path: '/dashboard/$dashboardId/tabs/organization/$orgId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsFactionFactionIdRoute =
  DashboardDashboardIdTabsFactionFactionIdRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/faction/$factionId',
    path: '/dashboard/$dashboardId/tabs/faction/$factionId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsItemItemIdIndexRoute =
  DashboardDashboardIdTabsItemItemIdIndexRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/item/$itemId/',
    path: '/dashboard/$dashboardId/tabs/item/$itemId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsCharacterCharacterIdIndexRoute =
  DashboardDashboardIdTabsCharacterCharacterIdIndexRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/character/$characterId/',
    path: '/dashboard/$dashboardId/tabs/character/$characterId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsItemItemIdTimelineRoute =
  DashboardDashboardIdTabsItemItemIdTimelineRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/item/$itemId/timeline',
    path: '/dashboard/$dashboardId/tabs/item/$itemId/timeline',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute =
  DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRouteImport.update({
    id: '/dashboard/$dashboardId/tabs/character/$characterId/family-tree',
    path: '/dashboard/$dashboardId/tabs/character/$characterId/family-tree',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdIndexRoute
  '/dashboard/$dashboardId/chapters/$editor-chapters-id': typeof DashboardDashboardIdChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/notes/$editorNotesId': typeof DashboardDashboardIdNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/$fileNotesId': typeof DashboardDashboardIdNotesFileNotesIdRoute
  '/dashboard/$dashboardId/chapters': typeof DashboardDashboardIdChaptersIndexRoute
  '/dashboard/$dashboardId/notes': typeof DashboardDashboardIdNotesIndexRoute
  '/dashboard/$dashboardId/tabs/faction/$factionId': typeof DashboardDashboardIdTabsFactionFactionIdRoute
  '/dashboard/$dashboardId/tabs/organization/$orgId': typeof DashboardDashboardIdTabsOrganizationOrgIdRoute
  '/dashboard/$dashboardId/tabs/plot/$plotId': typeof DashboardDashboardIdTabsPlotPlotIdRoute
  '/dashboard/$dashboardId/tabs/plot/plot-timeline': typeof DashboardDashboardIdTabsPlotPlotTimelineRoute
  '/dashboard/$dashboardId/tabs/race/$raceId': typeof DashboardDashboardIdTabsRaceRaceIdRoute
  '/dashboard/$dashboardId/tabs/world/$worldId': typeof DashboardDashboardIdTabsWorldWorldIdRoute
  '/dashboard/$dashboardId/tabs/character/$characterId/family-tree': typeof DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/tabs/item/$itemId/timeline': typeof DashboardDashboardIdTabsItemItemIdTimelineRoute
  '/dashboard/$dashboardId/tabs/character/$characterId': typeof DashboardDashboardIdTabsCharacterCharacterIdIndexRoute
  '/dashboard/$dashboardId/tabs/item/$itemId': typeof DashboardDashboardIdTabsItemItemIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdIndexRoute
  '/dashboard/$dashboardId/chapters/$editor-chapters-id': typeof DashboardDashboardIdChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/notes/$editorNotesId': typeof DashboardDashboardIdNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/$fileNotesId': typeof DashboardDashboardIdNotesFileNotesIdRoute
  '/dashboard/$dashboardId/chapters': typeof DashboardDashboardIdChaptersIndexRoute
  '/dashboard/$dashboardId/notes': typeof DashboardDashboardIdNotesIndexRoute
  '/dashboard/$dashboardId/tabs/faction/$factionId': typeof DashboardDashboardIdTabsFactionFactionIdRoute
  '/dashboard/$dashboardId/tabs/organization/$orgId': typeof DashboardDashboardIdTabsOrganizationOrgIdRoute
  '/dashboard/$dashboardId/tabs/plot/$plotId': typeof DashboardDashboardIdTabsPlotPlotIdRoute
  '/dashboard/$dashboardId/tabs/plot/plot-timeline': typeof DashboardDashboardIdTabsPlotPlotTimelineRoute
  '/dashboard/$dashboardId/tabs/race/$raceId': typeof DashboardDashboardIdTabsRaceRaceIdRoute
  '/dashboard/$dashboardId/tabs/world/$worldId': typeof DashboardDashboardIdTabsWorldWorldIdRoute
  '/dashboard/$dashboardId/tabs/character/$characterId/family-tree': typeof DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/tabs/item/$itemId/timeline': typeof DashboardDashboardIdTabsItemItemIdTimelineRoute
  '/dashboard/$dashboardId/tabs/character/$characterId': typeof DashboardDashboardIdTabsCharacterCharacterIdIndexRoute
  '/dashboard/$dashboardId/tabs/item/$itemId': typeof DashboardDashboardIdTabsItemItemIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/dashboard/$dashboardId/': typeof DashboardDashboardIdIndexRoute
  '/dashboard/$dashboardId/chapters/$editor-chapters-id': typeof DashboardDashboardIdChaptersEditorChaptersIdRoute
  '/dashboard/$dashboardId/notes/$editorNotesId': typeof DashboardDashboardIdNotesEditorNotesIdRoute
  '/dashboard/$dashboardId/notes/$fileNotesId': typeof DashboardDashboardIdNotesFileNotesIdRoute
  '/dashboard/$dashboardId/chapters/': typeof DashboardDashboardIdChaptersIndexRoute
  '/dashboard/$dashboardId/notes/': typeof DashboardDashboardIdNotesIndexRoute
  '/dashboard/$dashboardId/tabs/faction/$factionId': typeof DashboardDashboardIdTabsFactionFactionIdRoute
  '/dashboard/$dashboardId/tabs/organization/$orgId': typeof DashboardDashboardIdTabsOrganizationOrgIdRoute
  '/dashboard/$dashboardId/tabs/plot/$plotId': typeof DashboardDashboardIdTabsPlotPlotIdRoute
  '/dashboard/$dashboardId/tabs/plot/plot-timeline': typeof DashboardDashboardIdTabsPlotPlotTimelineRoute
  '/dashboard/$dashboardId/tabs/race/$raceId': typeof DashboardDashboardIdTabsRaceRaceIdRoute
  '/dashboard/$dashboardId/tabs/world/$worldId': typeof DashboardDashboardIdTabsWorldWorldIdRoute
  '/dashboard/$dashboardId/tabs/character/$characterId/family-tree': typeof DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute
  '/dashboard/$dashboardId/tabs/item/$itemId/timeline': typeof DashboardDashboardIdTabsItemItemIdTimelineRoute
  '/dashboard/$dashboardId/tabs/character/$characterId/': typeof DashboardDashboardIdTabsCharacterCharacterIdIndexRoute
  '/dashboard/$dashboardId/tabs/item/$itemId/': typeof DashboardDashboardIdTabsItemItemIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/dashboard/$dashboardId'
    | '/dashboard/$dashboardId/chapters/$editor-chapters-id'
    | '/dashboard/$dashboardId/notes/$editorNotesId'
    | '/dashboard/$dashboardId/notes/$fileNotesId'
    | '/dashboard/$dashboardId/chapters'
    | '/dashboard/$dashboardId/notes'
    | '/dashboard/$dashboardId/tabs/faction/$factionId'
    | '/dashboard/$dashboardId/tabs/organization/$orgId'
    | '/dashboard/$dashboardId/tabs/plot/$plotId'
    | '/dashboard/$dashboardId/tabs/plot/plot-timeline'
    | '/dashboard/$dashboardId/tabs/race/$raceId'
    | '/dashboard/$dashboardId/tabs/world/$worldId'
    | '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
    | '/dashboard/$dashboardId/tabs/character/$characterId'
    | '/dashboard/$dashboardId/tabs/item/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/dashboard/$dashboardId'
    | '/dashboard/$dashboardId/chapters/$editor-chapters-id'
    | '/dashboard/$dashboardId/notes/$editorNotesId'
    | '/dashboard/$dashboardId/notes/$fileNotesId'
    | '/dashboard/$dashboardId/chapters'
    | '/dashboard/$dashboardId/notes'
    | '/dashboard/$dashboardId/tabs/faction/$factionId'
    | '/dashboard/$dashboardId/tabs/organization/$orgId'
    | '/dashboard/$dashboardId/tabs/plot/$plotId'
    | '/dashboard/$dashboardId/tabs/plot/plot-timeline'
    | '/dashboard/$dashboardId/tabs/race/$raceId'
    | '/dashboard/$dashboardId/tabs/world/$worldId'
    | '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
    | '/dashboard/$dashboardId/tabs/character/$characterId'
    | '/dashboard/$dashboardId/tabs/item/$itemId'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/dashboard/$dashboardId/'
    | '/dashboard/$dashboardId/chapters/$editor-chapters-id'
    | '/dashboard/$dashboardId/notes/$editorNotesId'
    | '/dashboard/$dashboardId/notes/$fileNotesId'
    | '/dashboard/$dashboardId/chapters/'
    | '/dashboard/$dashboardId/notes/'
    | '/dashboard/$dashboardId/tabs/faction/$factionId'
    | '/dashboard/$dashboardId/tabs/organization/$orgId'
    | '/dashboard/$dashboardId/tabs/plot/$plotId'
    | '/dashboard/$dashboardId/tabs/plot/plot-timeline'
    | '/dashboard/$dashboardId/tabs/race/$raceId'
    | '/dashboard/$dashboardId/tabs/world/$worldId'
    | '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
    | '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
    | '/dashboard/$dashboardId/tabs/character/$characterId/'
    | '/dashboard/$dashboardId/tabs/item/$itemId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  DashboardDashboardIdIndexRoute: typeof DashboardDashboardIdIndexRoute
  DashboardDashboardIdChaptersEditorChaptersIdRoute: typeof DashboardDashboardIdChaptersEditorChaptersIdRoute
  DashboardDashboardIdNotesEditorNotesIdRoute: typeof DashboardDashboardIdNotesEditorNotesIdRoute
  DashboardDashboardIdNotesFileNotesIdRoute: typeof DashboardDashboardIdNotesFileNotesIdRoute
  DashboardDashboardIdChaptersIndexRoute: typeof DashboardDashboardIdChaptersIndexRoute
  DashboardDashboardIdNotesIndexRoute: typeof DashboardDashboardIdNotesIndexRoute
  DashboardDashboardIdTabsFactionFactionIdRoute: typeof DashboardDashboardIdTabsFactionFactionIdRoute
  DashboardDashboardIdTabsOrganizationOrgIdRoute: typeof DashboardDashboardIdTabsOrganizationOrgIdRoute
  DashboardDashboardIdTabsPlotPlotIdRoute: typeof DashboardDashboardIdTabsPlotPlotIdRoute
  DashboardDashboardIdTabsPlotPlotTimelineRoute: typeof DashboardDashboardIdTabsPlotPlotTimelineRoute
  DashboardDashboardIdTabsRaceRaceIdRoute: typeof DashboardDashboardIdTabsRaceRaceIdRoute
  DashboardDashboardIdTabsWorldWorldIdRoute: typeof DashboardDashboardIdTabsWorldWorldIdRoute
  DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute: typeof DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute
  DashboardDashboardIdTabsItemItemIdTimelineRoute: typeof DashboardDashboardIdTabsItemItemIdTimelineRoute
  DashboardDashboardIdTabsCharacterCharacterIdIndexRoute: typeof DashboardDashboardIdTabsCharacterCharacterIdIndexRoute
  DashboardDashboardIdTabsItemItemIdIndexRoute: typeof DashboardDashboardIdTabsItemItemIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/': {
      id: '/dashboard/$dashboardId/'
      path: '/dashboard/$dashboardId'
      fullPath: '/dashboard/$dashboardId'
      preLoaderRoute: typeof DashboardDashboardIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/': {
      id: '/dashboard/$dashboardId/notes/'
      path: '/dashboard/$dashboardId/notes'
      fullPath: '/dashboard/$dashboardId/notes'
      preLoaderRoute: typeof DashboardDashboardIdNotesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/chapters/': {
      id: '/dashboard/$dashboardId/chapters/'
      path: '/dashboard/$dashboardId/chapters'
      fullPath: '/dashboard/$dashboardId/chapters'
      preLoaderRoute: typeof DashboardDashboardIdChaptersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/$fileNotesId': {
      id: '/dashboard/$dashboardId/notes/$fileNotesId'
      path: '/dashboard/$dashboardId/notes/$fileNotesId'
      fullPath: '/dashboard/$dashboardId/notes/$fileNotesId'
      preLoaderRoute: typeof DashboardDashboardIdNotesFileNotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/notes/$editorNotesId': {
      id: '/dashboard/$dashboardId/notes/$editorNotesId'
      path: '/dashboard/$dashboardId/notes/$editorNotesId'
      fullPath: '/dashboard/$dashboardId/notes/$editorNotesId'
      preLoaderRoute: typeof DashboardDashboardIdNotesEditorNotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/chapters/$editor-chapters-id': {
      id: '/dashboard/$dashboardId/chapters/$editor-chapters-id'
      path: '/dashboard/$dashboardId/chapters/$editor-chapters-id'
      fullPath: '/dashboard/$dashboardId/chapters/$editor-chapters-id'
      preLoaderRoute: typeof DashboardDashboardIdChaptersEditorChaptersIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/world/$worldId': {
      id: '/dashboard/$dashboardId/tabs/world/$worldId'
      path: '/dashboard/$dashboardId/tabs/world/$worldId'
      fullPath: '/dashboard/$dashboardId/tabs/world/$worldId'
      preLoaderRoute: typeof DashboardDashboardIdTabsWorldWorldIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/race/$raceId': {
      id: '/dashboard/$dashboardId/tabs/race/$raceId'
      path: '/dashboard/$dashboardId/tabs/race/$raceId'
      fullPath: '/dashboard/$dashboardId/tabs/race/$raceId'
      preLoaderRoute: typeof DashboardDashboardIdTabsRaceRaceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/plot/plot-timeline': {
      id: '/dashboard/$dashboardId/tabs/plot/plot-timeline'
      path: '/dashboard/$dashboardId/tabs/plot/plot-timeline'
      fullPath: '/dashboard/$dashboardId/tabs/plot/plot-timeline'
      preLoaderRoute: typeof DashboardDashboardIdTabsPlotPlotTimelineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/plot/$plotId': {
      id: '/dashboard/$dashboardId/tabs/plot/$plotId'
      path: '/dashboard/$dashboardId/tabs/plot/$plotId'
      fullPath: '/dashboard/$dashboardId/tabs/plot/$plotId'
      preLoaderRoute: typeof DashboardDashboardIdTabsPlotPlotIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/organization/$orgId': {
      id: '/dashboard/$dashboardId/tabs/organization/$orgId'
      path: '/dashboard/$dashboardId/tabs/organization/$orgId'
      fullPath: '/dashboard/$dashboardId/tabs/organization/$orgId'
      preLoaderRoute: typeof DashboardDashboardIdTabsOrganizationOrgIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/faction/$factionId': {
      id: '/dashboard/$dashboardId/tabs/faction/$factionId'
      path: '/dashboard/$dashboardId/tabs/faction/$factionId'
      fullPath: '/dashboard/$dashboardId/tabs/faction/$factionId'
      preLoaderRoute: typeof DashboardDashboardIdTabsFactionFactionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/item/$itemId/': {
      id: '/dashboard/$dashboardId/tabs/item/$itemId/'
      path: '/dashboard/$dashboardId/tabs/item/$itemId'
      fullPath: '/dashboard/$dashboardId/tabs/item/$itemId'
      preLoaderRoute: typeof DashboardDashboardIdTabsItemItemIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/character/$characterId/': {
      id: '/dashboard/$dashboardId/tabs/character/$characterId/'
      path: '/dashboard/$dashboardId/tabs/character/$characterId'
      fullPath: '/dashboard/$dashboardId/tabs/character/$characterId'
      preLoaderRoute: typeof DashboardDashboardIdTabsCharacterCharacterIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/item/$itemId/timeline': {
      id: '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
      path: '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
      fullPath: '/dashboard/$dashboardId/tabs/item/$itemId/timeline'
      preLoaderRoute: typeof DashboardDashboardIdTabsItemItemIdTimelineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId/tabs/character/$characterId/family-tree': {
      id: '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
      path: '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
      fullPath: '/dashboard/$dashboardId/tabs/character/$characterId/family-tree'
      preLoaderRoute: typeof DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  DashboardDashboardIdIndexRoute: DashboardDashboardIdIndexRoute,
  DashboardDashboardIdChaptersEditorChaptersIdRoute:
    DashboardDashboardIdChaptersEditorChaptersIdRoute,
  DashboardDashboardIdNotesEditorNotesIdRoute:
    DashboardDashboardIdNotesEditorNotesIdRoute,
  DashboardDashboardIdNotesFileNotesIdRoute:
    DashboardDashboardIdNotesFileNotesIdRoute,
  DashboardDashboardIdChaptersIndexRoute:
    DashboardDashboardIdChaptersIndexRoute,
  DashboardDashboardIdNotesIndexRoute: DashboardDashboardIdNotesIndexRoute,
  DashboardDashboardIdTabsFactionFactionIdRoute:
    DashboardDashboardIdTabsFactionFactionIdRoute,
  DashboardDashboardIdTabsOrganizationOrgIdRoute:
    DashboardDashboardIdTabsOrganizationOrgIdRoute,
  DashboardDashboardIdTabsPlotPlotIdRoute:
    DashboardDashboardIdTabsPlotPlotIdRoute,
  DashboardDashboardIdTabsPlotPlotTimelineRoute:
    DashboardDashboardIdTabsPlotPlotTimelineRoute,
  DashboardDashboardIdTabsRaceRaceIdRoute:
    DashboardDashboardIdTabsRaceRaceIdRoute,
  DashboardDashboardIdTabsWorldWorldIdRoute:
    DashboardDashboardIdTabsWorldWorldIdRoute,
  DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute:
    DashboardDashboardIdTabsCharacterCharacterIdFamilyTreeRoute,
  DashboardDashboardIdTabsItemItemIdTimelineRoute:
    DashboardDashboardIdTabsItemItemIdTimelineRoute,
  DashboardDashboardIdTabsCharacterCharacterIdIndexRoute:
    DashboardDashboardIdTabsCharacterCharacterIdIndexRoute,
  DashboardDashboardIdTabsItemItemIdIndexRoute:
    DashboardDashboardIdTabsItemItemIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
